(cond (() t) 
      (t nil))
(cond (t (quote a)))
(cond (nil nil) 
      (t (quote a)))
(cond (nil (quote a))
      (t   (quote (1 2 3))))
(cond ( (eq (quote a) (quote a))   (quote equal))
)
(cond ((eq (quote a) (quote b)) (quote first))
      ((atom (quote a)) (quote second)))
(cond ((eq (quote a) (quote b))   (quote equal))
      ((quote t) (quote unequal)))

(cond ((atom t) (quote is-atom)) 
      (t (quote not-atom)))